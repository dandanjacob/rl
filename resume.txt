## Resumo
 Trabalho elaborado por Breno Marquez Azevedo e Daniel Jacob Tonn para avaliação da disciplina
de Reforcement Learning, coordenada pelo professor Flávio Codeço Coelho, com objetivo de  criar
um ambiente de simulação onde agentes de aprendizado de máquina podem aprender a jogar o jogo com 
eficiência. O projeto consiste em criar um ambiente de aprendizado de máquina parao jogo "Assault"
utilizando a biblioteca Gymnasium em Python. 

## O jogo
Assault consiste em jogo de tiro em 2D, onde o jogador controla um personagem, normalmente
 presente na parte inferior da tela, movendo-o para os lados e atirando contra inimigos (estes 
 presentes majoritariamente na parte superior da tela). A complexidade dos movimentos, tiros e 
 inimigos pode variar conforme as fases do jogo avançarem. O objetivo final é alcançar a maior 
 pontuação - avançar o maior número de fases - sem que o personagem controlado seja atingido. 

### Estados
Os estados são as informações que o agente recebe do ambiente. No jogo "Assault", os estados são
 as informações sobre a posição do personagem, a posição dos inimigos, a quantidade de munição e
 a quantidade de vidas restantes.
 O trecho "Box(0, 255, (210, 160, 3), uint8)" parece ser uma descrição de um espaço de observação
  (observation space) em um ambiente Gym. Nesse caso, é uma observação em forma de matriz (array) 
  de 3 canais (RGB), onde cada canal é um número inteiro sem sinal (uint8) variando de 0 a 255.
   Vou explicar em detalhes o que cada parte significa:
"Box": Isso indica que o espaço de observação é contínuo e, portanto, você pode ter qualquer valor 
real dentro do intervalo especificado.
"0, 255": Indica que os valores em cada canal (R, G, B) variam de 0 a 255.
"(210, 160, 3)": Isso especifica a forma da observação. A observação é uma matriz tridimensional com
 210 linhas, 160 colunas e 3 canais (correspondendo aos canais RGB).
"uint8": Isso indica que os valores em cada canal são números inteiros não assinados de 8 bits
 (0 a 255).
Essa descrição é típica de observações em ambientes do Gym que representam imagens coloridas em formato de matriz com valores de pixel em RGB, onde cada canal é representado por números inteiros sem sinal (uint8). Você pode usar essa informação para definir como o agente percebe o ambiente e processa as informações visuais para tomar decisões com base nas observações.







### Ações
As ações são as escolhas que os agentes podem fazer em um determinado estado. No jogo "Assault", as
 ações são atirar e andar, como descritas abaixo.
 Num  | Action
 0    | NOOP
 1    | FIRE
 2    | UP
 3    | RIGHT
 4    | LEFT
 5    | RIGHTFIRE
 6    | LEFTFIRE

### Recompensas
As recompensas e punições são
VALOR | AÇÃO
    | acertar um inimigo
    | 